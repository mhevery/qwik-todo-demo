/**
 * @license
 * Copyright BuilderIO All Rights Reserved.
 *
 * Use of this source code is governed by an MIT-style license that can be
 * found in the LICENSE file at https://github.com/BuilderIO/qwik/blob/main/LICENSE
 */
import { injectMethod, jsxFactory, provideComponentProp, provideEntityState, QRL, Host, } from '../qwik.js';
import { ItemComponent } from './Item_component.js';
// TODO: remove this by changing jsxFactory over to import
export const _needed_by_JSX_ = jsxFactory; // eslint-disable-line @typescript-eslint/no-unused-vars
export default injectMethod(ItemComponent, provideEntityState(provideComponentProp('$item') // TODO(type)
), provideComponentProp('$item'), function (item, itemKey) {
    return (jsxFactory(Host, { class: { completed: item.completed, editing: this.editing } },
        jsxFactory("div", { class: "view" },
            jsxFactory("input", { class: "toggle", type: "checkbox", checked: item.completed, "on:click": QRL `ui:/Item_toggle#?toggleState=.target.checked` }),
            jsxFactory("label", { "on:dblclick": QRL `ui:/Item_edit#begin` }, item.title),
            jsxFactory("button", { class: "destroy", "on:click": QRL `ui:/Item_remove#?itemKey=${itemKey}` })),
        this.editing ? (jsxFactory("input", { class: "edit", value: item.title, "on:blur": QRL `ui:/Item_edit#end`, "on:keyup": QRL `ui:/Item_edit#change?value=.target.value&code=.code&itemKey=${itemKey}` })) : null));
});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiSXRlbV90ZW1wbGF0ZS5qcyIsInNvdXJjZVJvb3QiOiIuLyIsInNvdXJjZXMiOlsic3JjL3VpL0l0ZW1fdGVtcGxhdGUudHN4Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7Ozs7R0FNRztBQUdILE9BQU8sRUFDTCxZQUFZLEVBQ1osVUFBVSxFQUNWLG9CQUFvQixFQUNwQixrQkFBa0IsRUFDbEIsR0FBRyxFQUdILElBQUksR0FDTCxNQUFNLFlBQVksQ0FBQztBQUNwQixPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFcEQsMERBQTBEO0FBQzFELE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBRyxVQUFVLENBQUMsQ0FBQyx3REFBd0Q7QUFDbkcsZUFBZSxZQUFZLENBQ3pCLGFBQWEsRUFDYixrQkFBa0IsQ0FDaEIsb0JBQW9CLENBQUMsT0FBTyxDQUEyQyxDQUFDLGFBQWE7Q0FDdEYsRUFDRCxvQkFBb0IsQ0FBQyxPQUFPLENBQUMsRUFDN0IsVUFBK0IsSUFBVSxFQUFFLE9BQWU7SUFDeEQsT0FBTyxDQUNMLFdBQUMsSUFBSSxJQUFDLEtBQUssRUFBRSxFQUFFLFNBQVMsRUFBRSxJQUFJLENBQUMsU0FBUyxFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsT0FBTyxFQUFFO1FBQy9ELG9CQUFLLEtBQUssRUFBQyxNQUFNO1lBQ2Ysc0JBQ0UsS0FBSyxFQUFDLFFBQVEsRUFDZCxJQUFJLEVBQUMsVUFBVSxFQUNmLE9BQU8sRUFBRSxJQUFJLENBQUMsU0FBUyxjQUNiLEdBQUcsQ0FBQSw4Q0FBOEMsR0FDM0Q7WUFDRixxQ0FBb0IsR0FBRyxDQUFBLHFCQUFxQixJQUFHLElBQUksQ0FBQyxLQUFLLENBQVM7WUFDbEUsdUJBQVEsS0FBSyxFQUFDLFNBQVMsY0FBVyxHQUFHLENBQUEsNEJBQTRCLE9BQU8sRUFBRSxHQUFXLENBQ2pGO1FBQ0wsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsQ0FDZCxzQkFDRSxLQUFLLEVBQUMsTUFBTSxFQUNaLEtBQUssRUFBRSxJQUFJLENBQUMsS0FBSyxhQUNSLEdBQUcsQ0FBQSxtQkFBbUIsY0FDckIsR0FBRyxDQUFBLCtEQUErRCxPQUFPLEVBQUUsR0FDckYsQ0FDSCxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQ0gsQ0FDUixDQUFDO0FBQ0osQ0FBQyxDQUNGLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIEBsaWNlbnNlXG4gKiBDb3B5cmlnaHQgQnVpbGRlcklPIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9naXRodWIuY29tL0J1aWxkZXJJTy9xd2lrL2Jsb2IvbWFpbi9MSUNFTlNFXG4gKi9cblxuaW1wb3J0IHsgSXRlbSwgSXRlbUVudGl0eSB9IGZyb20gJy4uL2RhdGEvSXRlbS5qcyc7XG5pbXBvcnQge1xuICBpbmplY3RNZXRob2QsXG4gIGpzeEZhY3RvcnksXG4gIHByb3ZpZGVDb21wb25lbnRQcm9wLFxuICBwcm92aWRlRW50aXR5U3RhdGUsXG4gIFFSTCxcbiAgRW50aXR5S2V5LFxuICBQcm92aWRlcixcbiAgSG9zdCxcbn0gZnJvbSAnLi4vcXdpay5qcyc7XG5pbXBvcnQgeyBJdGVtQ29tcG9uZW50IH0gZnJvbSAnLi9JdGVtX2NvbXBvbmVudC5qcyc7XG5cbi8vIFRPRE86IHJlbW92ZSB0aGlzIGJ5IGNoYW5naW5nIGpzeEZhY3Rvcnkgb3ZlciB0byBpbXBvcnRcbmV4cG9ydCBjb25zdCBfbmVlZGVkX2J5X0pTWF8gPSBqc3hGYWN0b3J5OyAvLyBlc2xpbnQtZGlzYWJsZS1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby11bnVzZWQtdmFyc1xuZXhwb3J0IGRlZmF1bHQgaW5qZWN0TWV0aG9kKFxuICBJdGVtQ29tcG9uZW50LFxuICBwcm92aWRlRW50aXR5U3RhdGU8SXRlbUVudGl0eT4oXG4gICAgcHJvdmlkZUNvbXBvbmVudFByb3AoJyRpdGVtJykgYXMgYW55IGFzIFByb3ZpZGVyPEVudGl0eUtleTxJdGVtRW50aXR5Pj4gLy8gVE9ETyh0eXBlKVxuICApLFxuICBwcm92aWRlQ29tcG9uZW50UHJvcCgnJGl0ZW0nKSxcbiAgZnVuY3Rpb24gKHRoaXM6IEl0ZW1Db21wb25lbnQsIGl0ZW06IEl0ZW0sIGl0ZW1LZXk6IHN0cmluZykge1xuICAgIHJldHVybiAoXG4gICAgICA8SG9zdCBjbGFzcz17eyBjb21wbGV0ZWQ6IGl0ZW0uY29tcGxldGVkLCBlZGl0aW5nOiB0aGlzLmVkaXRpbmcgfX0+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJ2aWV3XCI+XG4gICAgICAgICAgPGlucHV0XG4gICAgICAgICAgICBjbGFzcz1cInRvZ2dsZVwiXG4gICAgICAgICAgICB0eXBlPVwiY2hlY2tib3hcIlxuICAgICAgICAgICAgY2hlY2tlZD17aXRlbS5jb21wbGV0ZWR9XG4gICAgICAgICAgICBvbjpjbGljaz17UVJMYHVpOi9JdGVtX3RvZ2dsZSM/dG9nZ2xlU3RhdGU9LnRhcmdldC5jaGVja2VkYH1cbiAgICAgICAgICAvPlxuICAgICAgICAgIDxsYWJlbCBvbjpkYmxjbGljaz17UVJMYHVpOi9JdGVtX2VkaXQjYmVnaW5gfT57aXRlbS50aXRsZX08L2xhYmVsPlxuICAgICAgICAgIDxidXR0b24gY2xhc3M9XCJkZXN0cm95XCIgb246Y2xpY2s9e1FSTGB1aTovSXRlbV9yZW1vdmUjP2l0ZW1LZXk9JHtpdGVtS2V5fWB9PjwvYnV0dG9uPlxuICAgICAgICA8L2Rpdj5cbiAgICAgICAge3RoaXMuZWRpdGluZyA/IChcbiAgICAgICAgICA8aW5wdXRcbiAgICAgICAgICAgIGNsYXNzPVwiZWRpdFwiXG4gICAgICAgICAgICB2YWx1ZT17aXRlbS50aXRsZX1cbiAgICAgICAgICAgIG9uOmJsdXI9e1FSTGB1aTovSXRlbV9lZGl0I2VuZGB9IC8vIFRPRE86IGludmVzdGlnYXRlIHdoeSB0aGlzIHNvbWV0aW1lcyBkb2VzIG5vdCBmaXJlXG4gICAgICAgICAgICBvbjprZXl1cD17UVJMYHVpOi9JdGVtX2VkaXQjY2hhbmdlP3ZhbHVlPS50YXJnZXQudmFsdWUmY29kZT0uY29kZSZpdGVtS2V5PSR7aXRlbUtleX1gfVxuICAgICAgICAgIC8+XG4gICAgICAgICkgOiBudWxsfVxuICAgICAgPC9Ib3N0PlxuICAgICk7XG4gIH1cbik7XG4iXX0=